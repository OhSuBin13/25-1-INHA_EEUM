pipeline {
  agent any

  environment {
    IMAGE_NAME = "mosquitto"
  }

  stages {
    stage('Clone') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[
            url: 'https://github.com/25-1-INHA-EEUM/message_broker.git', 
            credentialsId: 'github-token'
          ]]
        ])
      }
    }

    stage('Deploy to Target EC2') {
      steps {
        withCredentials([
          string(credentialsId: 'target-host-ip', variable: 'TARGET_HOST_SECRET')
        ]) {
          withEnv(["TARGET_HOST=${env.TARGET_HOST_SECRET}"]) {
            sshagent(credentials: ['data-server-ec2-key']) {

              sh """
                echo "üì¶ docker-compose.ymlÍ≥º mosquitto ÎîîÎ†âÌÜ†Î¶¨ Ï†ÑÏÜ° Ï§ë..."
                ssh -o StrictHostKeyChecking=no ec2-user@${env.TARGET_HOST} "
                  sudo rm -rf ~/mosquitto-broker &&
                  mkdir -p ~/mosquitto-broker &&
                  sudo chown ec2-user:ec2-user ~/mosquitto-broker
                "
                scp -r -o StrictHostKeyChecking=no docker-compose.yml mosquitto ec2-user@${env.TARGET_HOST}:~/mosquitto-broker/
              """

              sh """
                echo "üöÄ Mosquitto Broker Ïª®ÌÖåÏù¥ÎÑà Î∞∞Ìè¨ ÏãúÏûë..."
                ssh -o StrictHostKeyChecking=no ec2-user@${env.TARGET_HOST} "
                  cd ~/mosquitto-broker &&
                  sudo docker compose down || true &&
                  sudo docker image prune -af &&
                  sudo docker compose up -d
                "
              """
            }
          }
        }
      }
    }
  }
}
